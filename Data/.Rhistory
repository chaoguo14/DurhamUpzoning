rpart.plot(fitted_cart, box.palette="RdBu", shadow.col="gray", nn=TRUE)
x1 <- rnorm(n=20)
y <- 3*x1 + rnorm(n = 20, sd = 0.5)
x2 <- as.factor(rep(letters[1:6], 4))  # Irrelevant factor with many levels
df <- data.frame(x1, x2, y)
x1 <- rnorm(n=20)
y <- 3*x1 + rnorm(n = 20, sd = 0.5)
x2 <- as.factor(rep(letters[1:5], 4))  # Irrelevant factor with many levels
df <- data.frame(x1, x2, y)
fitted_cart <- rpart(y~x1 + x2, data=df, method = "anova",
control = rpart.control(minsplit = 2, maxdepth = 5))
rpart.plot(fitted_cart, box.palette="RdBu", shadow.col="gray", nn=TRUE)
num_of_levels
sample_size <- seq(20, 5000, 100)
num_of_response_in_each_level <- sample_size * log(2) / log(sample_size + 1)
num_of_levels <- sample_size/num_of_response_in_each_level
plot(sample_size, ceiling(num_of_levels))
num_of_levels
ceiling(num_of_levels)
num_of_response_in_each_level
df
x1 <- rnorm(n=20)
y <- 3*x1 + rnorm(n = 20, sd = 0.5)
x2 <- as.factor(rep(letters[1:5], 4))  # Irrelevant factor with many levels
df <- data.frame(x1, x2, y)
fitted_cart <- rpart(y~x1 + x2, data=df, method = "anova",
control = rpart.control(minsplit = 2, maxdepth = 5))
rpart.plot(fitted_cart, box.palette="RdBu", shadow.col="gray", nn=TRUE)
x1 <- rnorm(n=20)
y <- 3*x1 + rnorm(n = 20, sd = 0.5)
x2 <- as.factor(rep(letters[1:5], 4))  # Irrelevant factor with many levels
df <- data.frame(x1, x2, y)
fitted_cart <- rpart(y~x1 + x2, data=df, method = "anova",
control = rpart.control(minsplit = 2, maxdepth = 5))
rpart.plot(fitted_cart, box.palette="RdBu", shadow.col="gray", nn=TRUE)
x1 <- rnorm(n=20)
y <- 3*x1 + rnorm(n = 20, sd = 0.5)
x2 <- as.factor(rep(letters[1:5], 4))  # Irrelevant factor with many levels
df <- data.frame(x1, x2, y)
fitted_cart <- rpart(y~x1 + x2, data=df, method = "anova",
control = rpart.control(minsplit = 2, maxdepth = 5))
rpart.plot(fitted_cart, box.palette="RdBu", shadow.col="gray", nn=TRUE)
?rep
x1 <- rnorm(n=20)
y <- 3*x1 + rnorm(n = 20, sd = 0.5)
x2 <- as.factor(rep(letters[1:6],  length.out = 20))  # Irrelevant factor with many levels
df <- data.frame(x1, x2, y)
fitted_cart <- rpart(y~x1 + x2, data=df, method = "anova",
control = rpart.control(minsplit = 2, maxdepth = 5))
rpart.plot(fitted_cart, box.palette="RdBu", shadow.col="gray", nn=TRUE)
x1 <- rnorm(n=20)
y <- 3*x1 + rnorm(n = 20, sd = 0.5)
x2 <- as.factor(rep(letters[1:7],  length.out = 20))  # Irrelevant factor with many levels
df <- data.frame(x1, x2, y)
fitted_cart <- rpart(y~x1 + x2, data=df, method = "anova",
control = rpart.control(minsplit = 2, maxdepth = 5))
rpart.plot(fitted_cart, box.palette="RdBu", shadow.col="gray", nn=TRUE)
x1 <- rnorm(n=20)
y <- 3*x1 + rnorm(n = 20, sd = 0.5)
x2 <- as.factor(rep(letters[1:8],  length.out = 20))  # Irrelevant factor with many levels
df <- data.frame(x1, x2, y)
fitted_cart <- rpart(y~x1 + x2, data=df, method = "anova",
control = rpart.control(minsplit = 2, maxdepth = 5))
rpart.plot(fitted_cart, box.palette="RdBu", shadow.col="gray", nn=TRUE)
x1 <- rnorm(n=20)
y <- 3*x1 + rnorm(n = 20, sd = 0.5)
x2 <- as.factor(rep(letters[1:8], length.out = 20))  # Irrelevant factor with many levels
df <- data.frame(x1, x2, y)
fitted_cart <- rpart(y~x1 + x2, data=df, method = "anova",
control = rpart.control(minsplit = 2, maxdepth = 5))
rpart.plot(fitted_cart, box.palette="RdBu", shadow.col="gray", nn=TRUE)
x1 <- rnorm(n=20)
y <- 3*x1 + rnorm(n = 20, sd = 0.5)
x2 <- as.factor(rep(letters[1:10], length.out = 20))  # Irrelevant factor with many levels
df <- data.frame(x1, x2, y)
fitted_cart <- rpart(y~x1 + x2, data=df, method = "anova",
control = rpart.control(minsplit = 2, maxdepth = 5))
rpart.plot(fitted_cart, box.palette="RdBu", shadow.col="gray", nn=TRUE)
df
rm(list=ls())
getwd()
setwd("Datakind/")
ls
permit_data <- read.csv("Data/All_Building_Permits.csv")
library(dplyr)
permit_data %>% head()
str(permit_data)
dim(permit_data)
permit_data <- read.csv("Data/All_Building_Permits.csv", stringsAsFactors = FALSE)
dim(permit_data)
permit_data %>% head()
permit_data[, 1]
permit_data[1, ]
permit_data[1, 'COMMENTS']
permit_data[1, 'DESCRIPTION']
length(unique(permit_data$PermitNum))
dim(permit_data)
length(unique(permit_data$PID))
unique(permit_data$BLDB_ACTIVITY)
unique(permit_data$BLDB_ACTIVITY_1)
str(permit_data)
permit_data$ISSUE_DATE <- lubridate::ymd_hms(permit_data$ISSUE_DATE)
str(permit_data)
permit_data$Issue_year_month <- paste(lubridate::year(permit_data$ISSUE_DATE), lubridate::month(permit_data$ISSUE_DATE))
str(permit_data)
permit_data %>% group_by(Issue_year_month) %>% summarise(num_of_record = n())
permit_data$Issue_year_month <- paste0(lubridate::year(permit_data$ISSUE_DATE), '-', lubridate::month(permit_data$ISSUE_DATE)), '-', '01'))
permit_data$Issue_year_month <- paste0(lubridate::year(permit_data$ISSUE_DATE), '-', lubridate::month(permit_data$ISSUE_DATE)), '-', '01')
permit_data$Issue_year_month <- paste0(lubridate::year(permit_data$ISSUE_DATE), '-', lubridate::month(permit_data$ISSUE_DATE), '-', '01')
permit_data$Issue_year_month <- lubridate::ymd(permit_data$Issue_year_month)
permit_data %>% group_by(Issue_year_month) %>% summarise(num_of_record = n())
library(ggplot2)
qplot(permit_data)
plot(permit_data %>% group_by(Issue_year_month) %>% summarise(num_of_record = n()))
qplot(permit_data %>% group_by(Issue_year_month) %>% summarise(num_of_record = n()))
ts.plot(permit_data %>% group_by(Issue_year_month) %>% summarise(num_of_record = n()) %>% select(num_of_record))
n_by_year <- permit_data %>% group_by(Issue_year_month) %>% summarise(num_of_record = n())
n_by_year
n_by_year[2:, ]
n_by_year[2:, :]
n_by_year[2:nrow(n_by_year), ]
n_by_year[2:nrow(n_by_year), ] %>% ts.plot()
n_by_year[2:nrow(n_by_year), 'num_of_record'] %>% ts.plot()
ggplot(n_by_year, aes(x=Issue_year_month, y=num_of_record)) +
geom_line()
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line()
str(permit_data)
unique(permit_data$BLD_Type)
unique(permit_data$BLDB_ACTIVITY)
unique(permit_data$BLD_Type)
unique(permit_data$BLDB_ACTIVITY)
ggplot(n_by_year[2:nrow(n_by_year), ] %>% filter(BLDB_ACTIVITY == 'ADD'), aes(x=Issue_year_month, y=num_of_record)) +
geom_line()
n_by_year <- permit_data %>% filter(BLDG_ACTIVITY == 'ADD') %>%
group_by(Issue_year_month) %>% summarise(num_of_record = n())
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line()
n_by_year <- permit_data %>% filter(BLDB_ACTIVITY == 'ADD') %>%
group_by(Issue_year_month) %>% summarise(num_of_record = n())
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line()
n_by_year <- permit_data %>% filter(BLDB_ACTIVITY == 'ALT') %>%
group_by(Issue_year_month) %>% summarise(num_of_record = n())
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line()
unique(permit_data$Shape)
permit_data$DESCRIPTION %>% head()
str(permit_data)
str(permit_data)
unique(permit_data$Shape)
unique(permit_data$BLD_Type)
unique(permit_data$BLDB_ACTIVITY)
unique(permit_data$BLDB_ACTIVITY_1)
n_by_year <- permit_data %>% filter(BLDB_ACTIVITY1 == 'New',BLD_Type == 'Single Family House') %>%
group_by(Issue_year_month) %>% summarise(num_of_record = n())
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line()
n_by_year <- permit_data %>% filter(BLDB_ACTIVITY1 == 'New',BLD_Type == 'Single Family House') %>%
group_by(Issue_year_month) %>% summarise(num_of_record = n())
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line() + geom_point()
n_by_year <- permit_data %>% filter(BLDB_ACTIVITY1 == 'New',BLD_Type == 'Single Family House') %>%
group_by(Issue_year_month) %>% summarise(num_of_record = n())
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line()
n_by_year <- permit_data %>% filter(BLDB_ACTIVITY_1 == 'New',BLD_Type == 'Single Family House') %>%
group_by(Issue_year_month) %>% summarise(num_of_record = n())
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line()
n_by_year <- permit_data %>% filter(BLDB_ACTIVITY_1 == 'New',BLD_Type == 'Single Family House') %>%
group_by(Issue_year_month) %>% summarise(num_of_record = n())
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line() + geom_point()
n_by_year <- permit_data %>% filter(BLDB_ACTIVITY_1 == 'New',BLD_Type == 'Single Family House') %>%
group_by(Issue_year_month) %>% summarise(num_of_record = n())
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line() + ggtitle("Number of Permits: NEw Single Family House")
permit_data$BLDB_ACTIVITY_1 %>% unique()
n_by_year <- permit_data %>% filter(BLDB_ACTIVITY_1 %in% c('Addition','New'),
BLD_Type == 'Single Family House') %>%
group_by(Issue_year_month) %>% summarise(num_of_record = n())
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line() + ggtitle("Number of Permits: Addition/New of Single Family House")
n_by_year <- permit_data %>% filter(BLDB_ACTIVITY_1 %in% c('Addition','New'),
BLD_Type %in% c('Single Family House','Mobile Home')
)%>%
group_by(Issue_year_month) %>% summarise(num_of_record = n())
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line() + geom_point() +
ggtitle("Number of Permits: Addition/New of Single Family House/Mobile Home")
n_by_year <- permit_data %>% filter(BLDB_ACTIVITY_1 %in% c('Addition','New'),
BLD_Type %in% c('Single Family House','Mobile Home')
)%>%
group_by(Issue_year_month) %>% summarise(num_of_record = n())
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line() + geom_point() +
ggtitle('Number of Permits by Year/Month', subtitle = 'Addition/New of Single Family House/Mobile Home')
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line() + geom_point() +
ggtitle('Number of Permits by Year/Month', subtitle = 'Addition/New of Single Family House/Mobile Home') +
theme_classic()
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line() + geom_point() +
ggtitle('Number of Permits by Year/Month', subtitle = 'Addition/New of Single Family House/Mobile Home') +
theme_minimal()
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line() + geom_point() +
ggtitle('Number of Permits by Year/Month', subtitle = 'Addition/New of Single Family House/Mobile Home') +
theme_bw()
unique(permit_data$BLDB_ACTIVITY_1)
n_by_year <- permit_data %>% filter(BLDB_ACTIVITY_1 %in% c('Addition','New'),
BLD_Type %in% c('3-4 Residential Units','5+ Residential Units')
)%>%
group_by(Issue_year_month) %>% summarise(num_of_record = n())
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line() + geom_point() +
ggtitle('Number of Permits by Year/Month', subtitle = 'Addition/New of 3+ Residential Units') +
theme_bw()
n_by_year <- permit_data %>% filter(BLDB_ACTIVITY_1 == 'New',BLD_Type == 'Single Family House') %>%
group_by(Issue_year_month) %>% summarise(num_of_record = n())
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line() + ggtitle("Number of Permits: New Single Family House")
n_by_year <- permit_data %>% filter(BLDB_ACTIVITY_1 %in% c('Addition','New'),
BLD_Type %in% c('Single Family House','Mobile Home')
)%>%
group_by(Issue_year_month) %>% summarise(num_of_record = n())
n_by_year <- permit_data %>% filter(BLDB_ACTIVITY_1 %in% c('Addition','New'),
BLD_Type %in% c('Single Family House','Mobile Home')
)%>%
group_by(Issue_year_month) %>% summarise(num_of_record = n())
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line() + geom_point() +
ggtitle('Number of Permits by Year/Month', subtitle = 'Addition/New of Single Family House/Mobile Home') +
theme_bw()
n_by_year <- permit_data %>% filter(BLDB_ACTIVITY_1 %in% c('Addition','New'),
BLD_Type %in% c('Modular')
)%>%
group_by(Issue_year_month) %>% summarise(num_of_record = n())
n_by_year <- permit_data %>% filter(BLDB_ACTIVITY_1 %in% c('Addition','New'),
BLD_Type %in% c('Modular')
)%>%
group_by(Issue_year_month) %>% summarise(num_of_record = n())
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line() + geom_point() +
ggtitle('Number of Permits by Year/Month', subtitle = 'Addition/New of Modular') +
theme_bw()
n_by_year <- permit_data %>% filter(BLDB_ACTIVITY_1 %in% c('Addition','New'),
BLD_Type %in% c('Modular Unit')
)%>%
group_by(Issue_year_month) %>% summarise(num_of_record = n())
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line() + geom_point() +
ggtitle('Number of Permits by Year/Month', subtitle = 'Addition/New of Modular') +
theme_bw()
n_by_year <- permit_data %>% filter(BLDB_ACTIVITY_1 %in% c('Addition','New'),
BLD_Type %in% c('Modular Unit')
)%>%
group_by(Issue_year_month) %>% summarise(num_of_record = n())
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line() + geom_point() +
ggtitle('Number of Permits by Year/Month', subtitle = 'Addition/New of Modular') +
theme_bw()
#
n_by_year <- permit_data %>% filter(BLDB_ACTIVITY_1 %in% c('Addition','New'),
BLD_Type %in% c('Single Family House','Mobile Home')
)%>%
group_by(Issue_year_month) %>% summarise(num_of_record = n())
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line() + geom_point() +
ggtitle('Number of Permits by Year/Month', subtitle = 'Addition/New of Single Family House/Mobile Home') +
theme_bw()
#
n_by_year <- permit_data %>% filter(BLDB_ACTIVITY_1 %in% c('Addition','New'),
BLD_Type %in% c('3-4 Residential Units','5+ Residential Units')
)%>%
group_by(Issue_year_month) %>% summarise(num_of_record = n())
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line() + geom_point() +
ggtitle('Number of Permits by Year/Month', subtitle = 'Addition/New of 3+ Residential Units') +
theme_bw()
cars
mtcars
library(cars)
library(Car)
library(car)
md <- lm(mpg ~ cyl + disp + hp + drat + wt + qsec)
md <- lm(mpg ~ cyl + disp + hp + drat + wt + qsec, data = mtcars)
plot(md$fitted.values, md$residuals)
car::vip(md)
car::vif(md)
summary(md)
getwd()
setwd("/")
getwd("/src")
setwd("/Users/chaoguo/src/DurhamUpzoning/")
setwd("/Users/chaoguo/src/DurhamUpzoning/Data")
rm(list=ls())
library(lubridate)
setwd("/Users/chaoguo/src/DurhamUpzoning/Data")
permit_data <- read.csv('All_Building_Permits.csv', header = TRUE, stringsAsFactors = FALSE)
# Some data wrangling
permit_data$ISSUE_DATE <- lubridate::ymd_hms(permit_data$ISSUE_DATE)
permit_data$Issue_year_month <- paste0(lubridate::year(permit_data$ISSUE_DATE), '-', lubridate::month(permit_data$ISSUE_DATE), '-', '01')
permit_data$Issue_year_month <- lubridate::ymd(permit_data$Issue_year_month)
n_by_year <- permit_data %>% filter(BLDB_ACTIVITY_1 %in% c('Addition','New'),
BLD_Type %in% c('Modular Unit')
)%>%
group_by(Issue_year_month) %>% summarise(num_of_record = n())
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line() + geom_point() +
ggtitle('Number of Permits by Year/Month', subtitle = 'Addition/New of Modular') +
theme_bw()
n_by_year <- permit_data %>%
filter(BLDB_ACTIVITY_1 %in% c('Addition','New'), BLD_Type %in% c('Modular Unit')) %>%
group_by(Issue_year_month) %>% summarise(num_of_record = n())
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line() + geom_point() +
ggtitle('Number of Permits by Year/Month', subtitle = 'Addition/New of Modular') +
theme_bw()
library(ggplot2)
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line() + geom_point() +
ggtitle('Number of Permits by Year/Month', subtitle = 'Addition/New of Modular') +
xlab('Issued Year/Month') +
theme_bw()
n_by_year <- permit_data %>%
filter(BLDB_ACTIVITY_1 %in% c('Addition','New'), BLD_Type %in% c('Modular Unit')) %>%
group_by(Issue_year_month) %>% summarise(num_of_record = n())
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line() + geom_point() +
ggtitle('Number of Permits by Year/Month', subtitle = 'Addition/New of Modular') +
xlab('Issued Year/Month') + ylab('Number of Permits') +
theme_bw()
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line() + geom_point() +
ggtitle('Number of Permits by Year/Month', subtitle = 'Addition/New of Modular') +
xlab('Issued Year/Month') + ylab('Number of Permits')
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line() + geom_point() +
ggtitle('Number of Permits by Year/Month', subtitle = 'Addition/New of Modular') +
xlab('Issued Year/Month') + ylab('Number of Permits') +geom_vline(xintercept=2)
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line() + geom_point() +
ggtitle('Number of Permits by Year/Month', subtitle = 'Addition/New of Modular') +
xlab('Issued Year/Month') + ylab('Number of Permits') +geom_vline(xintercept='2010')
?geom_vline
?scale_x_date
n_by_year$Issue_year_month
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line() + geom_point() +
ggtitle('Number of Permits by Year/Month', subtitle = 'Addition/New of Modular') +
scale_x_datetime(date_labels = '%b %d') +
xlab('Issued Year/Month') + ylab('Number of Permits')
str(n_by_year)
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line() + geom_point() +
ggtitle('Number of Permits by Year/Month', subtitle = 'Addition/New of Modular') +
scale_x_date(date_labels = "%b-%d-%Y")
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line() + geom_point() +
ggtitle('Number of Permits by Year/Month', subtitle = 'Addition/New of Modular') +
scale_x_date(date_labels = "%b-%d-%Y", date_breaks = '1 month')
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line() + geom_point() +
ggtitle('Number of Permits by Year/Month', subtitle = 'Addition/New of Modular') +
scale_x_date(date_labels = "%b-%d-%Y", date_breaks = '3 month')
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line() + geom_point() +
ggtitle('Number of Permits by Year/Month', subtitle = 'Addition/New of Modular') +
scale_x_date(date_labels = "%b-%Y", date_breaks = '3 month')
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line() + geom_point() +
ggtitle('Number of Permits by Year/Month', subtitle = 'Addition/New of Modular') +
scale_x_date(date_labels = "%b-%Y", date_breaks = '6 month')
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line() + geom_point() +
ggtitle('Number of Permits by Year/Month', subtitle = 'Addition/New of Modular') +
scale_x_date(date_labels = "%b-%Y", date_breaks = '12 month')
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line() + geom_point() +
ggtitle('Number of Permits by Year/Month', subtitle = 'Addition/New of Modular') +
scale_x_date(date_labels = "%b-%Y", date_breaks = '12 month')
xlab('Issued Year/Month') + ylab('Number of Permits') +geom_vline(xintercept='Oct-2009') +
theme_classic()
?ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line() + geom_point() +
ggtitle('Number of Permits by Year/Month', subtitle = 'Addition/New of Modular') +
scale_x_date(date_labels = "%b-%Y", date_breaks = '12 month')
xlab('Issued Year/Month') + ylab('Number of Permits') +geom_vline(xintercept = as.numeric(as.Date("2019-10-01")), linetype=4)+
theme_classic()
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line() + geom_point() +
ggtitle('Number of Permits by Year/Month', subtitle = 'Addition/New of Modular') +
scale_x_date(date_labels = "%b-%Y", date_breaks = '12 month')
xlab('Issued Year/Month') + ylab('Number of Permits') +geom_vline(xintercept = as.numeric(as.Date("2019-10-01")), linetype=4)+
theme_classic()
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line() + geom_point() +
ggtitle('Number of Permits by Year/Month', subtitle = 'Addition/New of Modular') +
scale_x_date(date_labels = "%b-%Y", date_breaks = '12 month')
xlab('Issued Year/Month') + ylab('Number of Permits') +
geom_vline(xintercept = as.numeric(as.Date("2019-10-01")), linetype=4)+
theme_classic()
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line() + geom_point() +
ggtitle('Number of Permits by Year/Month', subtitle = 'Addition/New of Modular') +
scale_x_date(date_labels = "%b-%Y", date_breaks = '12 month') +
xlab('Issued Year/Month') + ylab('Number of Permits') +
geom_vline(xintercept = as.numeric(as.Date("2019-10-01")), linetype=4)+
theme_classic()
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line() + geom_point() +
ggtitle('Number of Permits by Year/Month', subtitle = 'Addition/New of Modular') +
scale_x_date(date_labels = "%b-%Y", date_breaks = '12 month') +
xlab('Issued Year/Month') + ylab('Number of Permits') +
geom_vline(xintercept = as.numeric(as.Date("2019-10-01")), linetype=4)+
theme_grey()
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line() + geom_point() +
ggtitle('Number of Permits by Year/Month', subtitle = 'Addition/New of Modular') +
scale_x_date(date_labels = "%b-%Y", date_breaks = '12 month') +
xlab('Issued Year/Month') + ylab('Number of Permits') +
geom_vline(xintercept = as.numeric(as.Date("2019-10-01")), linetype=4) +
theme_linedraw()
n_by_year <- permit_data %>% filter(BLDB_ACTIVITY_1 %in% c('Addition','New'),
BLD_Type %in% c('Single Family House','Mobile Home')
)%>%
group_by(Issue_year_month) %>% summarise(num_of_record = n())
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line() + geom_point() +
ggtitle('Number of Permits by Year/Month', subtitle = 'Addition/New of Modular') +
scale_x_date(date_labels = "%b-%Y", date_breaks = '12 month') +
xlab('Issued Year/Month') + ylab('Number of Permits') +
geom_vline(xintercept = as.numeric(as.Date("2019-10-01")), linetype=4) +  # zoning reforms implemented on October 1, 2019
theme_linedraw()
n_by_year <- permit_data %>% filter(BLDB_ACTIVITY_1 %in% c('Addition','New'),
BLD_Type %in% c('3-4 Residential Units','5+ Residential Units')
)%>%
group_by(Issue_year_month) %>% summarise(num_of_record = n())
ggplot(n_by_year[2:nrow(n_by_year), ], aes(x=Issue_year_month, y=num_of_record)) +
geom_line() + geom_point() +
ggtitle('Number of Permits by Year/Month', subtitle = 'Addition/New of 3+ Residential Units') +
scale_x_date(date_labels = "%b-%Y", date_breaks = '12 month') +
xlab('Issued Year/Month') + ylab('Number of Permits') +
geom_vline(xintercept = as.numeric(as.Date("2019-10-01")), linetype=4) +  # zoning reforms implemented on October 1, 2019
theme_linedraw()
permit_data %>% head()
permit_data$PmtStatus %>% unique()
permit_data[, permit_data$PmtStatus == 'Disapproved'] %>% dim()
permit_data[permit_data$PmtStatus == 'Disapproved'] %>% dim()
permit_data[permit_data$PmtStatus == 'Disapproved', ] %>% dim()
dim(permit_data)
permit_data[permit_data$PmtStatus == 'Issued', ] %>% dim()
permit_data %>% group_by(PmtStatus) %>% sumamrise(cnt = count())
permit_data %>% group_by(PmtStatus) %>% summarise(cnt = count())
library(dplyr)
permit_data %>% group_by(PmtStatus) %>% summarise(cnt = count())
?group_by
permit_data %>% group_by(PmtStatus) %>% summarise(cnt = count())
permit_data %>% group_by(PmtStatus)
permit_data %>% group_by(PmtStatus) %>% summarise(cnt = n())
permit_data %>% group_by(PmtStatus, Issue_year_month) %>% summarise(cnt = n())
permit_data %>% group_by(PmtStatus, Issue_year_month) %>% summarise(cnt = n()) %>% tidyr::pivot_wider(id_cols = Issue_year_month, names_From = PmtStatus)
permit_data %>% group_by(PmtStatus, Issue_year_month) %>% summarise(cnt = n()) %>% tidyr::pivot_wider(id_cols = Issue_year_month, names_from = PmtStatus)
permit_data %>% group_by(PmtStatus, Issue_year_month) %>% summarise(cnt = n()) %>% tidyr::pivot_wider(id_cols = Issue_year_month, names_from = PmtStatus, values_from = cnt)
permit_data %>% group_by(PmtStatus, Issue_year_month) %>% summarise(cnt = n()) %>% tidyr::pivot_wider(id_cols = Issue_year_month, names_from = PmtStatus, values_from = cnt)
permit_data %>% group_by(PmtStatus, Issue_year_month) %>% summarise(cnt = n())
permit_data %>% group_by(PmtStatus, Issue_year_month) %>% summarise(cnt = n()) %>% ungroup() %>% tidyr::pivot_wider(id_cols = Issue_year_month, names_from = PmtStatus, values_from = cnt)
permit_data %>% group_by(PmtStatus, Issue_year_month) %>% summarise(cnt = n()) %>% ungroup() %>% tidyr::pivot_wider(id_cols = Issue_year_month, names_from = PmtStatus, values_from = cnt, names_prefix = 'Permit Type: ')
permit_data %>% group_by(PmtStatus, Issue_year_month) %>% summarise(cnt = n()) %>% ungroup() %>% tidyr::pivot_wider(id_cols = Issue_year_month, names_from = PmtStatus, values_from = cnt, names_prefix = 'Permit Type: ') %>% arrange(asc(Issue_year_month))
permit_data %>% group_by(PmtStatus, Issue_year_month) %>% summarise(cnt = n()) %>% ungroup() %>% tidyr::pivot_wider(id_cols = Issue_year_month, names_from = PmtStatus, values_from = cnt, names_prefix = 'Permit Type: ') %>% arrange(Issue_year_month)
permit_data %>% group_by(PmtStatus, lubridate::year(Issue_year_month)) %>% summarise(cnt = n()) %>% ungroup() %>%
tidyr::pivot_wider(id_cols = Issue_year_month, names_from = PmtStatus, values_from = cnt, names_prefix = 'Permit Type: ') %>%
arrange(Issue_year_month)
permit_data %>% group_by(PmtStatus, Issue_year_month) %>% summarise(cnt = n()) %>% ungroup() %>%
tidyr::pivot_wider(id_cols = Issue_year_month, names_from = PmtStatus, values_from = cnt, names_prefix = 'Permit Type: ') %>%
arrange(Issue_year_month) %>% data.frame()
permit_data %>% head()
permit_data$ISSUE_DATE %>% head()
permit_data$ISSUE_DATE %>% is.na() %>% sum()
setwd("/Users/chaoguo/src/DurhamUpzoning/Data")
permit_data <- read.csv('All_Building_Permits.csv', header = TRUE, stringsAsFactors = FALSE)
# Some data wrangling
permit_data$ISSUE_DATE <- lubridate::ymd_hms(permit_data$ISSUE_DATE)
permit_data$Issue_year_month <- paste0(lubridate::year(permit_data$ISSUE_DATE), '-', lubridate::month(permit_data$ISSUE_DATE), '-', '01')
permit_data$ISSUE_DATE %>% is.na() %>% sum()
permit_data$Issue_year_month %>% head()
permit_data$Issue_year_month <- lubridate::ymd(permit_data$Issue_year_month)
permit_data$Issue_year_month %>% head()
group_by(PmtStatus, Issue_year_month) %>% summarise(cnt = n()) %>% ungroup()
permit_data %>% group_by(PmtStatus, Issue_year_month) %>% summarise(cnt = n()) %>% ungroup()
permit_data %>% group_by(PmtStatus, Issue_year_month) %>% summarise(cnt = n()) %>% ungroup() %>%
tidyr::pivot_wider(id_cols = Issue_year_month, names_from = PmtStatus, values_from = cnt, names_prefix = 'PERMIT_TYPE_') %>%
arrange(Issue_year_month)
permit_data %>% group_by(PmtStatus, Issue_year_month) %>% summarise(cnt = n()) %>% ungroup() %>%
tidyr::pivot_wider(id_cols = Issue_year_month, names_from = PmtStatus, values_from = cnt, names_prefix = 'PERMIT_TYPE_', values_fill = 0) %>%
arrange(Issue_year_month)
permit_data %>% group_by(PmtStatus, Issue_year_month) %>% summarise(cnt = n()) %>% ungroup() %>%
tidyr::pivot_wider(id_cols = Issue_year_month, names_from = PmtStatus, values_from = cnt, names_prefix = 'PERMIT_TYPE_', values_fill = 0) %>%
arrange(Issue_year_month)
permit_data %>% group_by(PmtStatus, Issue_year_month) %>% summarise(cnt = n()) %>% ungroup() %>%
tidyr::pivot_wider(id_cols = Issue_year_month, names_from = PmtStatus, values_from = cnt, names_prefix = 'PERMIT_TYPE_', values_fill = 0)
library(tidyr)
install.packages(c("backports", "BH", "bibtex", "boot", "broom", "callr", "car", "carData", "class", "cli", "clipr", "cluster", "coda", "codetools", "colorspace", "colourpicker", "coronavirus", "covr", "cowplot", "crayon", "crosstalk", "DALEX", "data.table", "DBI", "dbplyr", "devtools", "digest", "dplyr", "DT", "dtw", "e1071", "ellipsis", "fansi", "fastDummies", "fastmap", "FKF", "forcats", "foreach", "forecast", "Formula", "fs", "geepack", "generics", "GGally", "ggforce", "ggplot2", "ggpubr", "ggrepel", "ggsignif", "gh", "git2r", "glmnet", "glmnetUtils", "glue", "grpreg", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "hunspell", "igraph", "ingredients", "isoband", "ISOcodes", "iterators", "jsonlite", "KernSmooth", "KFAS", "knitr", "labeling", "labelled", "later", "lifecycle", "lme4", "lmerTest", "lmtest", "lubridate", "magrittr", "maptools", "MARSS", "MASS", "MatchIt", "Matrix", "memoise", "mgcv", "mime", "mlflow", "modelr", "modelStudio", "network", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "pbkrtest", "pillar", "pkgbuild", "pkgload", "pls", "pracma", "processx", "promises", "ps", "quantmod", "quantreg", "r2d3", "R6", "rappdirs", "Rcpp", "RcppArmadillo", "RcppEigen", "Rdpack", "readr", "remotes", "reprex", "reticulate", "rlang", "rmarkdown", "roxygen2", "rprojroot", "rstatix", "rstudioapi", "rversions", "rvest", "sarima", "scales", "shape", "SHAPforxgboost", "shiny", "shinyjs", "sna", "sp", "SparseM", "spatial", "statmod", "statnet.common", "stopwords", "stringdist", "stringi", "survival", "swagger", "sys", "tableone", "testthat", "tibble", "tidyr", "tidyselect", "tidytext", "tinytex", "tseries", "TTR", "tweedie", "usethis", "vctrs", "withr", "xfun", "xgboost", "xts", "yesno", "zip"))
y
install.packages(c("backports", "BH", "bibtex", "boot", "broom", "callr", "car", "carData", "class", "cli", "clipr", "cluster", "coda", "codetools", "colorspace", "colourpicker", "coronavirus", "covr", "cowplot", "crayon", "crosstalk", "DALEX", "data.table", "DBI", "dbplyr", "devtools", "digest", "dplyr", "DT", "dtw", "e1071", "ellipsis", "fansi", "fastDummies", "fastmap", "FKF", "forcats", "foreach", "forecast", "Formula", "fs", "geepack", "generics", "GGally", "ggforce", "ggplot2", "ggpubr", "ggrepel", "ggsignif", "gh", "git2r", "glmnet", "glmnetUtils", "glue", "grpreg", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "hunspell", "igraph", "ingredients", "isoband", "ISOcodes", "iterators", "jsonlite", "KernSmooth", "KFAS", "knitr", "labeling", "labelled", "later", "lifecycle", "lme4", "lmerTest", "lmtest", "lubridate", "magrittr", "maptools", "MARSS", "MASS", "MatchIt", "Matrix", "memoise", "mgcv", "mime", "mlflow", "modelr", "modelStudio", "network", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "pbkrtest", "pillar", "pkgbuild", "pkgload", "pls", "pracma", "processx", "promises", "ps", "quantmod", "quantreg", "r2d3", "R6", "rappdirs", "Rcpp", "RcppArmadillo", "RcppEigen", "Rdpack", "readr", "remotes", "reprex", "reticulate", "rlang", "rmarkdown", "roxygen2", "rprojroot", "rstatix", "rstudioapi", "rversions", "rvest", "sarima", "scales", "shape", "SHAPforxgboost", "shiny", "shinyjs", "sna", "sp", "SparseM", "spatial", "statmod", "statnet.common", "stopwords", "stringdist", "stringi", "survival", "swagger", "sys", "tableone", "testthat", "tibble", "tidyr", "tidyselect", "tidytext", "tinytex", "tseries", "TTR", "tweedie", "usethis", "vctrs", "withr", "xfun", "xgboost", "xts", "yesno", "zip"))
install.packages(c("backports", "BH", "bibtex", "boot", "broom", "callr", "car", "carData", "class", "cli", "clipr", "cluster", "coda", "codetools", "colorspace", "colourpicker", "coronavirus", "covr", "cowplot", "crayon", "crosstalk", "DALEX", "data.table", "DBI", "dbplyr", "devtools", "digest", "dplyr", "DT", "dtw", "e1071", "ellipsis", "fansi", "fastDummies", "fastmap", "FKF", "forcats", "foreach", "forecast", "Formula", "fs", "geepack", "generics", "GGally", "ggforce", "ggplot2", "ggpubr", "ggrepel", "ggsignif", "gh", "git2r", "glmnet", "glmnetUtils", "glue", "grpreg", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "hunspell", "igraph", "ingredients", "isoband", "ISOcodes", "iterators", "jsonlite", "KernSmooth", "KFAS", "knitr", "labeling", "labelled", "later", "lifecycle", "lme4", "lmerTest", "lmtest", "lubridate", "magrittr", "maptools", "MARSS", "MASS", "MatchIt", "Matrix", "memoise", "mgcv", "mime", "mlflow", "modelr", "modelStudio", "network", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "pbkrtest", "pillar", "pkgbuild", "pkgload", "pls", "pracma", "processx", "promises", "ps", "quantmod", "quantreg", "r2d3", "R6", "rappdirs", "Rcpp", "RcppArmadillo", "RcppEigen", "Rdpack", "readr", "remotes", "reprex", "reticulate", "rlang", "rmarkdown", "roxygen2", "rprojroot", "rstatix", "rstudioapi", "rversions", "rvest", "sarima", "scales", "shape", "SHAPforxgboost", "shiny", "shinyjs", "sna", "sp", "SparseM", "spatial", "statmod", "statnet.common", "stopwords", "stringdist", "stringi", "survival", "swagger", "sys", "tableone", "testthat", "tibble", "tidyr", "tidyselect", "tidytext", "tinytex", "tseries", "TTR", "tweedie", "usethis", "vctrs", "withr", "xfun", "xgboost", "xts", "yesno", "zip"))
install.packages(c("backports", "BH", "bibtex", "boot", "broom", "callr", "car", "carData", "class", "cli", "clipr", "cluster", "coda", "codetools", "colorspace", "colourpicker", "coronavirus", "covr", "cowplot", "crayon", "crosstalk", "DALEX", "data.table", "DBI", "dbplyr", "devtools", "digest", "dplyr", "DT", "dtw", "e1071", "ellipsis", "fansi", "fastDummies", "fastmap", "FKF", "forcats", "foreach", "forecast", "Formula", "fs", "geepack", "generics", "GGally", "ggforce", "ggplot2", "ggpubr", "ggrepel", "ggsignif", "gh", "git2r", "glmnet", "glmnetUtils", "glue", "grpreg", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "hunspell", "igraph", "ingredients", "isoband", "ISOcodes", "iterators", "jsonlite", "KernSmooth", "KFAS", "knitr", "labeling", "labelled", "later", "lifecycle", "lme4", "lmerTest", "lmtest", "lubridate", "magrittr", "maptools", "MARSS", "MASS", "MatchIt", "Matrix", "memoise", "mgcv", "mime", "mlflow", "modelr", "modelStudio", "network", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "pbkrtest", "pillar", "pkgbuild", "pkgload", "pls", "pracma", "processx", "promises", "ps", "quantmod", "quantreg", "r2d3", "R6", "rappdirs", "Rcpp", "RcppArmadillo", "RcppEigen", "Rdpack", "readr", "remotes", "reprex", "reticulate", "rlang", "rmarkdown", "roxygen2", "rprojroot", "rstatix", "rstudioapi", "rversions", "rvest", "sarima", "scales", "shape", "SHAPforxgboost", "shiny", "shinyjs", "sna", "sp", "SparseM", "spatial", "statmod", "statnet.common", "stopwords", "stringdist", "stringi", "survival", "swagger", "sys", "tableone", "testthat", "tibble", "tidyr", "tidyselect", "tidytext", "tinytex", "tseries", "TTR", "tweedie", "usethis", "vctrs", "withr", "xfun", "xgboost", "xts", "yesno", "zip"))
install.packages(c("backports", "BH", "bibtex", "boot", "broom", "callr", "car", "carData", "class", "cli", "clipr", "cluster", "coda", "codetools", "colorspace", "colourpicker", "coronavirus", "covr", "cowplot", "crayon", "crosstalk", "DALEX", "data.table", "DBI", "dbplyr", "devtools", "digest", "dplyr", "DT", "dtw", "e1071", "ellipsis", "fansi", "fastDummies", "fastmap", "FKF", "forcats", "foreach", "forecast", "Formula", "fs", "geepack", "generics", "GGally", "ggforce", "ggplot2", "ggpubr", "ggrepel", "ggsignif", "gh", "git2r", "glmnet", "glmnetUtils", "glue", "grpreg", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "hunspell", "igraph", "ingredients", "isoband", "ISOcodes", "iterators", "jsonlite", "KernSmooth", "KFAS", "knitr", "labeling", "labelled", "later", "lifecycle", "lme4", "lmerTest", "lmtest", "lubridate", "magrittr", "maptools", "MARSS", "MASS", "MatchIt", "Matrix", "memoise", "mgcv", "mime", "mlflow", "modelr", "modelStudio", "network", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "pbkrtest", "pillar", "pkgbuild", "pkgload", "pls", "pracma", "processx", "promises", "ps", "quantmod", "quantreg", "r2d3", "R6", "rappdirs", "Rcpp", "RcppArmadillo", "RcppEigen", "Rdpack", "readr", "remotes", "reprex", "reticulate", "rlang", "rmarkdown", "roxygen2", "rprojroot", "rstatix", "rstudioapi", "rversions", "rvest", "sarima", "scales", "shape", "SHAPforxgboost", "shiny", "shinyjs", "sna", "sp", "SparseM", "spatial", "statmod", "statnet.common", "stopwords", "stringdist", "stringi", "survival", "swagger", "sys", "tableone", "testthat", "tibble", "tidyr", "tidyselect", "tidytext", "tinytex", "tseries", "TTR", "tweedie", "usethis", "vctrs", "withr", "xfun", "xgboost", "xts", "yesno", "zip"))
install.packages(c("backports", "BH", "bibtex", "boot", "broom", "callr", "car", "carData", "class", "cli", "clipr", "cluster", "coda", "codetools", "colorspace", "colourpicker", "coronavirus", "covr", "cowplot", "crayon", "crosstalk", "DALEX", "data.table", "DBI", "dbplyr", "devtools", "digest", "dplyr", "DT", "dtw", "e1071", "ellipsis", "fansi", "fastDummies", "fastmap", "FKF", "forcats", "foreach", "forecast", "Formula", "fs", "geepack", "generics", "GGally", "ggforce", "ggplot2", "ggpubr", "ggrepel", "ggsignif", "gh", "git2r", "glmnet", "glmnetUtils", "glue", "grpreg", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "hunspell", "igraph", "ingredients", "isoband", "ISOcodes", "iterators", "jsonlite", "KernSmooth", "KFAS", "knitr", "labeling", "labelled", "later", "lifecycle", "lme4", "lmerTest", "lmtest", "lubridate", "magrittr", "maptools", "MARSS", "MASS", "MatchIt", "Matrix", "memoise", "mgcv", "mime", "mlflow", "modelr", "modelStudio", "network", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "pbkrtest", "pillar", "pkgbuild", "pkgload", "pls", "pracma", "processx", "promises", "ps", "quantmod", "quantreg", "r2d3", "R6", "rappdirs", "Rcpp", "RcppArmadillo", "RcppEigen", "Rdpack", "readr", "remotes", "reprex", "reticulate", "rlang", "rmarkdown", "roxygen2", "rprojroot", "rstatix", "rstudioapi", "rversions", "rvest", "sarima", "scales", "shape", "SHAPforxgboost", "shiny", "shinyjs", "sna", "sp", "SparseM", "spatial", "statmod", "statnet.common", "stopwords", "stringdist", "stringi", "survival", "swagger", "sys", "tableone", "testthat", "tibble", "tidyr", "tidyselect", "tidytext", "tinytex", "tseries", "TTR", "tweedie", "usethis", "vctrs", "withr", "xfun", "xgboost", "xts", "yesno", "zip"))
install.packages(c("backports", "BH", "bibtex", "boot", "broom", "callr", "car", "carData", "class", "cli", "clipr", "cluster", "coda", "codetools", "colorspace", "colourpicker", "coronavirus", "covr", "cowplot", "crayon", "crosstalk", "DALEX", "data.table", "DBI", "dbplyr", "devtools", "digest", "dplyr", "DT", "dtw", "e1071", "ellipsis", "fansi", "fastDummies", "fastmap", "FKF", "forcats", "foreach", "forecast", "Formula", "fs", "geepack", "generics", "GGally", "ggforce", "ggplot2", "ggpubr", "ggrepel", "ggsignif", "gh", "git2r", "glmnet", "glmnetUtils", "glue", "grpreg", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "hunspell", "igraph", "ingredients", "isoband", "ISOcodes", "iterators", "jsonlite", "KernSmooth", "KFAS", "knitr", "labeling", "labelled", "later", "lifecycle", "lme4", "lmerTest", "lmtest", "lubridate", "magrittr", "maptools", "MARSS", "MASS", "MatchIt", "Matrix", "memoise", "mgcv", "mime", "mlflow", "modelr", "modelStudio", "network", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "pbkrtest", "pillar", "pkgbuild", "pkgload", "pls", "pracma", "processx", "promises", "ps", "quantmod", "quantreg", "r2d3", "R6", "rappdirs", "Rcpp", "RcppArmadillo", "RcppEigen", "Rdpack", "readr", "remotes", "reprex", "reticulate", "rlang", "rmarkdown", "roxygen2", "rprojroot", "rstatix", "rstudioapi", "rversions", "rvest", "sarima", "scales", "shape", "SHAPforxgboost", "shiny", "shinyjs", "sna", "sp", "SparseM", "spatial", "statmod", "statnet.common", "stopwords", "stringdist", "stringi", "survival", "swagger", "sys", "tableone", "testthat", "tibble", "tidyr", "tidyselect", "tidytext", "tinytex", "tseries", "TTR", "tweedie", "usethis", "vctrs", "withr", "xfun", "xgboost", "xts", "yesno", "zip"))
